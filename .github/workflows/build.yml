name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    name: ${{ matrix.platform }} ( ${{ matrix.python-version }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        python-version: ["3.10"]
        platform: [ubuntu-latest] #, windows-latest, macos-latest] 

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up conda ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          auto-update-conda: true
          activate-environment: test
          python-version: ${{ matrix.python-version }}
          channels: conda-forge

      - name: Conda info
        shell: bash -l {0}
        run: conda info

      - name: Install scikit-build
        shell: bash -l {0}
        run: pip install scikit-build pytest pytest-cov pytest-benchmark

      - name: Install pocl
        shell: bash -l {0}
        run: conda install -y pocl

      # - name: Install tests dependencies
      #   shell: bash -l {0}
      #   run: conda install -y numpy pytest pytest-cov pytest-benchmark

      - name: Compile
        shell: bash -l {0}
        run: |
          pip install . -vvv
      
      # export SKBUILD_CONFIGURE_OPTIONS="-DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DBUILD_BENCHMARK=OFF -DBUILD_TESTING=OFF"
      
      - name: Tests
        shell: bash -l {0}
        run: |
          pytest -v

      # export LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH

      # echo CONDA_PREFIX=$CONDA_PREFIX
      # echo "ldd libOpenCL.so"
      # ldd $CONDA_PREFIX/lib/libOpenCL.so
      # echo "ldd libOpenCL.so.1"
      # ldd $CONDA_PREFIX/lib/libOpenCL.so.1
      # echo "ldd _pyclesperanto.so"
      # ldd ./_skbuild/linux-x86_64-3.10/setuptools/lib.linux-x86_64-cpython-310/pyclesperanto/_pyclesperanto.cpython-310-x86_64-linux-gnu.so
      
          

